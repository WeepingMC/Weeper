From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Yannick Lamprecht <yannicklamprecht@live.de>
Date: Sat, 19 Jun 2021 15:21:16 +0200
Subject: [PATCH] packet support


diff --git a/src/main/java/com/destroystokyo/paper/SkinParts.java b/src/main/java/com/destroystokyo/paper/SkinParts.java
index 4a0c39405d4fbed457787e3c6ded4cc6591bc8c2..6eeb26ac9d1fda673019e68f6e55c96049db34ff 100644
--- a/src/main/java/com/destroystokyo/paper/SkinParts.java
+++ b/src/main/java/com/destroystokyo/paper/SkinParts.java
@@ -1,5 +1,10 @@
 package com.destroystokyo.paper;
 
+import org.jetbrains.annotations.NotNull;
+
+/**
+ * Skin parts
+ */
 public interface SkinParts {
 
     boolean hasCapeEnabled();
@@ -17,4 +22,23 @@ public interface SkinParts {
     boolean hasHatsEnabled();
 
     int getRaw();
+
+    interface Builder {
+        @NotNull
+        Builder withCape();
+        @NotNull
+        Builder withJacket();
+        @NotNull
+        Builder withLeftSleeve();
+        @NotNull
+        Builder withRightSleeve();
+        @NotNull
+        Builder withLeftPants();
+        @NotNull
+        Builder withRightPants();
+        @NotNull
+        Builder withHat();
+        @NotNull
+        SkinParts build();
+    }
 }
diff --git a/src/main/java/com/github/weepingmc/packet/PacketPipeline.java b/src/main/java/com/github/weepingmc/packet/PacketPipeline.java
new file mode 100644
index 0000000000000000000000000000000000000000..c13f90878e9feadd2fb2a6e8b6f20862e1439e0f
--- /dev/null
+++ b/src/main/java/com/github/weepingmc/packet/PacketPipeline.java
@@ -0,0 +1,26 @@
+package com.github.weepingmc.packet;
+
+import com.github.weepingmc.packet.options.EntityMetaBuilder;
+
+import org.bukkit.scoreboard.Team;
+import org.jetbrains.annotations.NotNull;
+
+import com.destroystokyo.paper.SkinParts;
+
+public interface PacketPipeline {
+
+    @NotNull
+    PacketStepBuilder create();
+
+    @NotNull
+    EntityMetaBuilder createEntityMetaBuilder();
+
+    @NotNull
+    SkinParts.Builder createSkinPartsBuilder();
+
+    @NotNull
+    Team createTeam(@NotNull String name);
+
+    @NotNull
+    String generateRandomString(int count, boolean letters, boolean numbers);
+}
diff --git a/src/main/java/com/github/weepingmc/packet/PacketStep.java b/src/main/java/com/github/weepingmc/packet/PacketStep.java
new file mode 100644
index 0000000000000000000000000000000000000000..b9e036645e35ea07cf70e9e67b182cf9056f6e0c
--- /dev/null
+++ b/src/main/java/com/github/weepingmc/packet/PacketStep.java
@@ -0,0 +1,9 @@
+package com.github.weepingmc.packet;
+
+import org.bukkit.entity.Player;
+import org.jetbrains.annotations.NotNull;
+
+@FunctionalInterface
+public interface PacketStep {
+    void execute(@NotNull Player player);
+}
diff --git a/src/main/java/com/github/weepingmc/packet/PacketStepBuilder.java b/src/main/java/com/github/weepingmc/packet/PacketStepBuilder.java
new file mode 100644
index 0000000000000000000000000000000000000000..ce7d35d0fda07bd36ac5538c4b2b2b4ee52c00ac
--- /dev/null
+++ b/src/main/java/com/github/weepingmc/packet/PacketStepBuilder.java
@@ -0,0 +1,99 @@
+package com.github.weepingmc.packet;
+
+import com.destroystokyo.paper.profile.PlayerProfile;
+
+import org.bukkit.Bukkit;
+import org.bukkit.Location;
+import org.bukkit.block.data.BlockData;
+import org.bukkit.entity.EntityType;
+import org.bukkit.entity.Player;
+import org.bukkit.inventory.EquipmentSlot;
+import org.bukkit.inventory.ItemStack;
+import com.github.weepingmc.packet.options.Animation;
+import com.github.weepingmc.packet.options.EntityMetaBuilder;
+import com.github.weepingmc.packet.options.PlayerAbility;
+import com.github.weepingmc.packet.options.ProfileAction;
+import com.github.weepingmc.packet.options.TeamMode;
+import org.bukkit.plugin.java.JavaPlugin;
+import org.bukkit.scoreboard.Team;
+import org.bukkit.util.Vector;
+import org.jetbrains.annotations.NotNull;
+
+import java.util.Collection;
+import java.util.Set;
+import java.util.UUID;
+import java.util.concurrent.TimeUnit;
+
+public interface PacketStepBuilder {
+
+    @NotNull
+    PacketStepBuilder sendPlayerProfile(@NotNull PlayerProfile playerProfile, @NotNull ProfileAction profileAction);
+
+    @NotNull
+    PacketStepBuilder spawnPlayer(int entityId, @NotNull UUID uuid, @NotNull Location location);
+
+    @NotNull
+    PacketStepBuilder setPlayerTeam(@NotNull Team team, @NotNull TeamMode teamMode);
+
+    @NotNull
+    PacketStepBuilder teleportEntity(int entityId, @NotNull Location location, boolean onGround);
+
+    @NotNull
+    PacketStepBuilder sendBlockChange(@NotNull Location location, @NotNull BlockData blockData);
+
+    @NotNull
+    PacketStepBuilder sleepAt(int entityId, @NotNull Location location);
+
+    @NotNull
+    PacketStepBuilder rotateHead(int entityId, float yaw);
+
+    @NotNull
+    PacketStepBuilder rotateFullHead(int entityId, float yaw, float pitch, boolean onGround);
+
+    @NotNull
+    PacketStepBuilder movePositionAndRotateFullHead(int entityId, @NotNull Vector direction, byte yaw, byte pitch, boolean onGround);
+
+    @NotNull
+    PacketStepBuilder destroyEntity(int entityId);
+
+    @NotNull
+    PacketStepBuilder animateBlockBreak(int entityID, @NotNull Location location, byte destroyStage);
+
+    @NotNull
+    PacketStepBuilder setEquipmentItem(int entityId, @NotNull EquipmentSlot equipmentSlot, @NotNull ItemStack itemStack);
+
+    @NotNull
+    PacketStepBuilder delay(@NotNull JavaPlugin javaPlugin, long time, @NotNull TimeUnit timeUnit);
+
+    @NotNull
+    PacketStepBuilder custom(@NotNull PacketStep packetStep);
+
+    @NotNull
+    PacketStepBuilder removeEntity(int entityId);
+
+    @NotNull
+    PacketStepBuilder animateEntity(int entityId, @NotNull Animation animation);
+
+    @NotNull
+    PacketStepBuilder spawnEntity(int entityId, @NotNull UUID uuid, @NotNull Location location, @NotNull EntityType entityType, @NotNull Vector movementDirection);
+
+    @NotNull
+    PacketStepBuilder withMeta(int entityId, @NotNull EntityMetaBuilder metaBuilder);
+
+    /**
+     * sets the player abilities
+     *
+     * @param playerAbilities [Invulnerable, Flying, Allow Flying, Creative Mode (Instant Break)]
+     * @param flySpeed 0.05 by default.
+     * @param fieldOfViewModifier Modifies the field of view, like a speed potion. A Notchian server will use the same value as the movement speed sent in the Entity Properties packet, which defaults to 0.1 for players.
+     * @return builder
+     */
+    @NotNull
+    PacketStepBuilder playerAbilities(@NotNull Set<PlayerAbility> playerAbilities, float flySpeed, float fieldOfViewModifier);
+
+    default void send(){
+        send(Bukkit.getOnlinePlayers());
+    }
+
+    void send(@NotNull Collection<? extends Player> players);
+}
diff --git a/src/main/java/com/github/weepingmc/packet/options/Animation.java b/src/main/java/com/github/weepingmc/packet/options/Animation.java
new file mode 100644
index 0000000000000000000000000000000000000000..eed9614c64f7fcb36ca2b10bb148931442a881ca
--- /dev/null
+++ b/src/main/java/com/github/weepingmc/packet/options/Animation.java
@@ -0,0 +1,10 @@
+package com.github.weepingmc.packet.options;
+
+public enum Animation {
+    SWING_MAIN_ARM,
+    TAKE_DAMAGE,
+    LEAVE_BED,
+    SWING_OFFHAND,
+    CRITICAL_EFFECT,
+    MAGIC_CRITICAL_EFFECT
+}
diff --git a/src/main/java/com/github/weepingmc/packet/options/EntityMetaBuilder.java b/src/main/java/com/github/weepingmc/packet/options/EntityMetaBuilder.java
new file mode 100644
index 0000000000000000000000000000000000000000..c5c51fe715c5654b210a72b518e923656d800772
--- /dev/null
+++ b/src/main/java/com/github/weepingmc/packet/options/EntityMetaBuilder.java
@@ -0,0 +1,20 @@
+package com.github.weepingmc.packet.options;
+
+import net.md_5.bungee.api.chat.BaseComponent;
+import org.jetbrains.annotations.NotNull;
+import org.jetbrains.annotations.Nullable;
+
+import java.util.Set;
+
+import com.destroystokyo.paper.SkinParts;
+
+public interface EntityMetaBuilder {
+    @NotNull
+    EntityMetaBuilder withEntityStatus(@NotNull Set<EntityStatus> entityStatus);
+
+    @NotNull
+    EntityMetaBuilder withCustomName(@Nullable BaseComponent[] baseComponents);
+
+    @NotNull
+    EntityMetaBuilder withSkinParts(@NotNull SkinParts skinParts);
+}
diff --git a/src/main/java/com/github/weepingmc/packet/options/EntityStatus.java b/src/main/java/com/github/weepingmc/packet/options/EntityStatus.java
new file mode 100644
index 0000000000000000000000000000000000000000..8c0a564f3538598d090dc009641f61bd7ce675b8
--- /dev/null
+++ b/src/main/java/com/github/weepingmc/packet/options/EntityStatus.java
@@ -0,0 +1,11 @@
+package com.github.weepingmc.packet.options;
+
+public enum EntityStatus {
+    IS_ON_FIRE,
+    IS_CROUCHING,
+    IS_SPRINTING,
+    IS_SWIMMING,
+    IS_INVISIBLE,
+    HAS_GLOWING_EFFECT,
+    IS_FLYING_WITH_ELYTRA
+}
diff --git a/src/main/java/com/github/weepingmc/packet/options/PlayerAbility.java b/src/main/java/com/github/weepingmc/packet/options/PlayerAbility.java
new file mode 100644
index 0000000000000000000000000000000000000000..4006afbec75cefb42f5722249f65ab2a47e716fd
--- /dev/null
+++ b/src/main/java/com/github/weepingmc/packet/options/PlayerAbility.java
@@ -0,0 +1,5 @@
+package com.github.weepingmc.packet.options;
+
+public enum PlayerAbility {
+  ALLOW_FLYING, CREATIVE_MODE_INSTANT_BREAK, FLYING, INVULNERABLE
+}
diff --git a/src/main/java/com/github/weepingmc/packet/options/ProfileAction.java b/src/main/java/com/github/weepingmc/packet/options/ProfileAction.java
new file mode 100644
index 0000000000000000000000000000000000000000..ad2398e817783f9e77b12c2beb3a1271564001bb
--- /dev/null
+++ b/src/main/java/com/github/weepingmc/packet/options/ProfileAction.java
@@ -0,0 +1,9 @@
+package com.github.weepingmc.packet.options;
+
+public enum ProfileAction {
+    ADD_PLAYER,
+    UPDATE_GAME_MODE,
+    UPDATE_LATENCY,
+    UPDATE_DISPLAY_NAME,
+    REMOVE_PLAYER;
+}
diff --git a/src/main/java/com/github/weepingmc/packet/options/TeamMode.java b/src/main/java/com/github/weepingmc/packet/options/TeamMode.java
new file mode 100644
index 0000000000000000000000000000000000000000..aafa50f0809a03dcdd3a8fcf914d04e780fe1656
--- /dev/null
+++ b/src/main/java/com/github/weepingmc/packet/options/TeamMode.java
@@ -0,0 +1,9 @@
+package com.github.weepingmc.packet.options;
+
+public enum TeamMode {
+    CREATE_TEAM,
+    REMOVE_TEAM,
+    UPDATE_TEAM_INFO,
+    ADD_PLAYERS_TO_TEAM,
+    REMOVE_PLAYERS_FROM_TEAM
+}
diff --git a/src/main/java/org/bukkit/Bukkit.java b/src/main/java/org/bukkit/Bukkit.java
index d36e4bc3c3713407704b865574cba28662f17315..2c71b7af84358f31a277071e4ef5aba4daad6b97 100644
--- a/src/main/java/org/bukkit/Bukkit.java
+++ b/src/main/java/org/bukkit/Bukkit.java
@@ -2057,6 +2057,15 @@ public final class Bukkit {
     public static io.papermc.paper.datapack.DatapackManager getDatapackManager() {
         return server.getDatapackManager();
     }
+
+    /**
+     * Returns the {@link com.github.weepingmc.packet.PacketPipeline}
+     * @return the packet pipeline
+     */
+    @NotNull
+    public static com.github.weepingmc.packet.PacketPipeline getPacketPipeline() {
+        return server.getPacketPipeline();
+    }
     // Paper end
 
     @NotNull
diff --git a/src/main/java/org/bukkit/Server.java b/src/main/java/org/bukkit/Server.java
index 83870d54a5ff1017ad7455e9c931fdee54354434..9f6dce86f185faec18152a485dcae0cf3823036b 100644
--- a/src/main/java/org/bukkit/Server.java
+++ b/src/main/java/org/bukkit/Server.java
@@ -1788,5 +1788,12 @@ public interface Server extends PluginMessageRecipient, net.kyori.adventure.audi
      */
     @NotNull
     io.papermc.paper.datapack.DatapackManager getDatapackManager();
+
+    /**
+     * Returns the {@link com.github.weepingmc.packet.PacketPipeline}
+     * @return the packet pipeline
+     */
+    @NotNull
+    com.github.weepingmc.packet.PacketPipeline getPacketPipeline();
     // Paper end
 }
