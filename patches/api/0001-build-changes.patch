From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Yannick Lamprecht <yannicklamprecht@live.de>
Date: Thu, 8 Dec 2022 21:31:23 +0100
Subject: [PATCH] build changes

Update cve'd dependencies
fix failing class reference
bump asm
Do not warn on event listener registration by declaring event when event is deprecated.
All JavaPlugins listed do not throw the deprecated event register warning
add deprecation annotations where javadoc is bitching

diff --git a/build.gradle.kts b/build.gradle.kts
index 66bcd8f9a8fce8f920a0f1dd7ae0a2937da68e80..f90897e646ebdf28c0f972b7d760d073c7b2b72d 100644
--- a/build.gradle.kts
+++ b/build.gradle.kts
@@ -13,7 +13,7 @@ val annotationsVersion = "24.0.1"
 val bungeeCordChatVersion = "1.20-R0.2"
 val adventureVersion = "4.16.0"
 val slf4jVersion = "2.0.9"
-val log4jVersion = "2.17.1"
+val log4jVersion = "2.19.0"
 val apiAndDocs: Configuration by configurations.creating {
     attributes {
         attribute(Category.CATEGORY_ATTRIBUTE, objects.named(Category.DOCUMENTATION))
@@ -52,8 +52,8 @@ dependencies {
     api("org.apache.logging.log4j:log4j-api:$log4jVersion")
     api("org.slf4j:slf4j-api:$slf4jVersion")
 
-    implementation("org.ow2.asm:asm:9.5")
-    implementation("org.ow2.asm:asm-commons:9.5")
+    implementation("org.ow2.asm:asm:9.6") // Weeper - bump asm
+    implementation("org.ow2.asm:asm-commons:9.6") // Weeper - bump asm
     // Paper end
 
     api("org.apache.maven:maven-resolver-provider:3.9.6") // Paper - make API dependency for Paper Plugins
@@ -74,7 +74,7 @@ dependencies {
     testImplementation("org.junit.jupiter:junit-jupiter:5.10.0")
     testImplementation("org.hamcrest:hamcrest:2.2")
     testImplementation("org.mockito:mockito-core:5.5.0")
-    testImplementation("org.ow2.asm:asm-tree:9.5")
+    testImplementation("org.ow2.asm:asm-tree:9.6") // Weeper - bump asm
 }
 
 // Paper start
diff --git a/src/main/java/io/papermc/paper/registry/RegistryKey.java b/src/main/java/io/papermc/paper/registry/RegistryKey.java
index c4b30b16ce4db754b958c493ad86d0863592c263..3e39d859b1789ab7c5ab24121fe2f7a09d6a5f1e 100644
--- a/src/main/java/io/papermc/paper/registry/RegistryKey.java
+++ b/src/main/java/io/papermc/paper/registry/RegistryKey.java
@@ -32,12 +32,10 @@ public sealed interface RegistryKey<T> extends Keyed permits RegistryKeyImpl {
      * ******************* */
     /**
      * Built-in registry for game events
-     * @see io.papermc.paper.registry.keys.GameEventKeys
      */
     RegistryKey<GameEvent> GAME_EVENT = create("game_event");
     /**
      * Built-in registry for structure types.
-     * @see io.papermc.paper.registry.keys.StructureTypeKeys
      */
     RegistryKey<StructureType> STRUCTURE_TYPE = create("worldgen/structure_type");
 
@@ -46,22 +44,18 @@ public sealed interface RegistryKey<T> extends Keyed permits RegistryKeyImpl {
      * ********************** */
     /**
      * Data-driven registry for biomes.
-     * @see io.papermc.paper.registry.keys.BiomeKeys
      */
     RegistryKey<Biome> BIOME = create("worldgen/biome");
     /**
      * Data-driven registry for structures.
-     * @see io.papermc.paper.registry.keys.StructureKeys
      */
     RegistryKey<Structure> STRUCTURE = create("worldgen/structure");
     /**
      * Data-driven registry for trim materials.
-     * @see io.papermc.paper.registry.keys.TrimMaterialKeys
      */
     RegistryKey<TrimMaterial> TRIM_MATERIAL = create("trim_material");
     /**
      * Data-driven registry for trim patterns.
-     * @see io.papermc.paper.registry.keys.TrimPatternKeys
      */
     RegistryKey<TrimPattern> TRIM_PATTERN = create("trim_pattern");
 }
diff --git a/src/main/java/org/bukkit/event/enchantment/PrepareItemEnchantEvent.java b/src/main/java/org/bukkit/event/enchantment/PrepareItemEnchantEvent.java
index f0db59a556deaefefbdaca121585c0fd199c13c2..ad077dbad280331b5457b1e79232f9052aa4dfa9 100644
--- a/src/main/java/org/bukkit/event/enchantment/PrepareItemEnchantEvent.java
+++ b/src/main/java/org/bukkit/event/enchantment/PrepareItemEnchantEvent.java
@@ -86,6 +86,7 @@ public class PrepareItemEnchantEvent extends InventoryEvent implements Cancellab
      *
      * @return list of available enchantment offers
      */
+    @Deprecated
     public @org.jetbrains.annotations.Nullable EnchantmentOffer @NotNull [] getOffers() { // Paper offers can contain null values
         return offers;
     }
diff --git a/src/main/java/org/bukkit/plugin/java/JavaPluginLoader.java b/src/main/java/org/bukkit/plugin/java/JavaPluginLoader.java
index eaefbb00e9993d54906cc8cf35cf753c0d6c7707..14dfad3a45e702c926dbca9f79a2f5e9581c6c2b 100644
--- a/src/main/java/org/bukkit/plugin/java/JavaPluginLoader.java
+++ b/src/main/java/org/bukkit/plugin/java/JavaPluginLoader.java
@@ -13,6 +13,7 @@ import java.util.HashMap;
 import java.util.HashSet;
 import java.util.List;
 import java.util.Map;
+import java.util.Objects;
 import java.util.Set;
 import java.util.concurrent.CopyOnWriteArrayList;
 import java.util.jar.JarEntry;
@@ -279,6 +280,12 @@ public final class JavaPluginLoader implements PluginLoader {
                     if (!warningState.printFor(warning)) {
                         break;
                     }
+                    // Weeper start - allow exclusion for own plugin
+                    if(Objects.equals(clazz.getClassLoader(), plugin.getClass().getClassLoader())) {
+                        break;
+                    }
+                    // Weeper end - allow exclusion for own plugin
+
                     plugin.getLogger().log(
                             Level.WARNING,
                             String.format(
