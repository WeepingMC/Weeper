From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Yannick Lamprecht <yannicklamprecht@live.de>
Date: Thu, 8 Dec 2022 21:31:23 +0100
Subject: [PATCH] build changes

Update cve'd dependencies
fix failing class reference
bump asm
Do not warn on event listener registration by declaring event when event is deprecated.
All JavaPlugins listed do not throw the deprecated event register warning
add deprecation annotations where javadoc is bitching
unwrap integer in unit test
api generator changes

diff --git a/build.gradle.kts b/build.gradle.kts
index 04853c43b99951bf0d4c96ef73724625bdaf018f..f6ff8e522cbdd69b65ad470f5986ba377c89a6e5 100644
--- a/build.gradle.kts
+++ b/build.gradle.kts
@@ -13,7 +13,7 @@ val annotationsVersion = "24.0.1"
 val bungeeCordChatVersion = "1.20-R0.2"
 val adventureVersion = "4.16.0"
 val slf4jVersion = "2.0.9"
-val log4jVersion = "2.17.1"
+val log4jVersion = "2.19.0"
 val apiAndDocs: Configuration by configurations.creating {
     attributes {
         attribute(Category.CATEGORY_ATTRIBUTE, objects.named(Category.DOCUMENTATION))
@@ -78,7 +78,7 @@ dependencies {
 }
 
 // Paper start
-val generatedApiPath: java.nio.file.Path = rootProject.projectDir.toPath().resolve("paper-api-generator/generated")
+val generatedApiPath: java.nio.file.Path = rootProject.projectDir.toPath().resolve("weeper-api-generator/generated") // Weeper - api generator changes
 idea {
     module {
         generatedSourceDirs.add(generatedApiPath.toFile())
diff --git a/src/main/java/org/bukkit/event/enchantment/PrepareItemEnchantEvent.java b/src/main/java/org/bukkit/event/enchantment/PrepareItemEnchantEvent.java
index f0db59a556deaefefbdaca121585c0fd199c13c2..ad077dbad280331b5457b1e79232f9052aa4dfa9 100644
--- a/src/main/java/org/bukkit/event/enchantment/PrepareItemEnchantEvent.java
+++ b/src/main/java/org/bukkit/event/enchantment/PrepareItemEnchantEvent.java
@@ -86,6 +86,7 @@ public class PrepareItemEnchantEvent extends InventoryEvent implements Cancellab
      *
      * @return list of available enchantment offers
      */
+    @Deprecated
     public @org.jetbrains.annotations.Nullable EnchantmentOffer @NotNull [] getOffers() { // Paper offers can contain null values
         return offers;
     }
diff --git a/src/main/java/org/bukkit/plugin/java/JavaPluginLoader.java b/src/main/java/org/bukkit/plugin/java/JavaPluginLoader.java
index eaefbb00e9993d54906cc8cf35cf753c0d6c7707..037b1d0f3b187e40a1d9d0a8de45f9f9deedf613 100644
--- a/src/main/java/org/bukkit/plugin/java/JavaPluginLoader.java
+++ b/src/main/java/org/bukkit/plugin/java/JavaPluginLoader.java
@@ -279,6 +279,12 @@ public final class JavaPluginLoader implements PluginLoader {
                     if (!warningState.printFor(warning)) {
                         break;
                     }
+                    // Weeper start - allow exclusion for own plugin
+                    if(java.util.Objects.equals(clazz.getClassLoader(), plugin.getClass().getClassLoader())) {
+                        break;
+                    }
+                    // Weeper end - allow exclusion for own plugin
+
                     plugin.getLogger().log(
                             Level.WARNING,
                             String.format(
diff --git a/src/test/java/org/bukkit/metadata/FixedMetadataValueTest.java b/src/test/java/org/bukkit/metadata/FixedMetadataValueTest.java
index 91584b94b542828e4058feee84367945aa45d2f2..61a06edb30a20db1a4a166652470243d778ee680 100644
--- a/src/test/java/org/bukkit/metadata/FixedMetadataValueTest.java
+++ b/src/test/java/org/bukkit/metadata/FixedMetadataValueTest.java
@@ -11,15 +11,15 @@ public class FixedMetadataValueTest {
 
     @Test
     public void testBasic() {
-        subject = new FixedMetadataValue(plugin, new Integer(50));
+        subject = new FixedMetadataValue(plugin, 50);
         assertSame(plugin, subject.getOwningPlugin());
-        assertEquals(new Integer(50), subject.value());
+        assertEquals(50, subject.value());
     }
 
     @Test
     public void testNumberTypes() {
-        subject = new FixedMetadataValue(plugin, new Integer(5));
-        assertEquals(new Integer(5), subject.value());
+        subject = new FixedMetadataValue(plugin, 5);
+        assertEquals(5, subject.value());
         assertEquals(5, subject.asInt());
         assertTrue(subject.asBoolean());
         assertEquals(5, subject.asByte());
diff --git a/src/test/java/org/bukkit/metadata/MetadataValueAdapterTest.java b/src/test/java/org/bukkit/metadata/MetadataValueAdapterTest.java
index 2b6a53b2de7397bc9fc63bd29b1af53a44a6cba6..ac87405c73eb4b765c4828e4b32d67c16a0f39f0 100644
--- a/src/test/java/org/bukkit/metadata/MetadataValueAdapterTest.java
+++ b/src/test/java/org/bukkit/metadata/MetadataValueAdapterTest.java
@@ -15,10 +15,10 @@ public class MetadataValueAdapterTest {
         assertEquals(mv.getOwningPlugin(), this.plugin);
 
         // Check value-getting and invalidation.
-        assertEquals(new Integer(1), mv.value());
-        assertEquals(new Integer(2), mv.value());
+        assertEquals(1, mv.value());
+        assertEquals(2, mv.value());
         mv.invalidate();
-        assertEquals(new Integer(1), mv.value());
+        assertEquals(1, mv.value());
     }
 
     @Test
