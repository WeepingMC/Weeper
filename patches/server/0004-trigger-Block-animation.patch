From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Yannick Lamprecht <yannicklamprecht@live.de>
Date: Sat, 19 Jun 2021 15:08:28 +0200
Subject: [PATCH] trigger Block animation


diff --git a/src/main/java/org/bukkit/craftbukkit/CraftWorld.java b/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
index 5d5e3fa4d1fd9a2d0cfb5caae9b1ad153745208b..68d6cde8edd7eee7df4a62dbe96dac4a91f777ae 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
@@ -45,6 +45,9 @@ import net.minecraft.world.level.ClipContext;
 import net.minecraft.world.level.Explosion;
 import net.minecraft.world.level.GameRules;
 import net.minecraft.world.level.block.Blocks;
+import net.minecraft.world.level.block.ChorusFlowerBlock;
+import net.minecraft.world.level.block.DiodeBlock;
+import net.minecraft.world.level.block.entity.BlockEntity;
 import net.minecraft.world.level.chunk.ChunkAccess;
 import net.minecraft.world.level.chunk.ChunkStatus;
 import net.minecraft.world.level.chunk.ImposterProtoChunk;
@@ -114,6 +117,7 @@ import org.bukkit.util.BoundingBox;
 import org.bukkit.util.Consumer;
 import org.bukkit.util.RayTraceResult;
 import org.bukkit.util.Vector;
+import org.jetbrains.annotations.NotNull;
 
 public class CraftWorld extends CraftRegionAccessor implements World {
     public static final int CUSTOM_DIMENSION_OFFSET = 10;
@@ -1980,6 +1984,16 @@ public class CraftWorld extends CraftRegionAccessor implements World {
     public DragonBattle getEnderDragonBattle() {
         return (this.getHandle().dragonFight() == null) ? null : new CraftDragonBattle(this.getHandle().dragonFight());
     }
+
+    // Weeper start
+    @Override
+    public void triggerBlockAnimation(@NotNull Location location,
+        int action, int actionParameter) {
+            BlockPos position = new BlockPos(location.getX(), location.getY(), location.getZ());
+            BlockEntity blockEntity = world.getTileEntity(position, true);
+            world.blockEvent(position, blockEntity.getBlockState().getBlock(), action, actionParameter);
+    }
+    // Weeper end
     // Paper start
     @Override
     public java.util.concurrent.CompletableFuture<Chunk> getChunkAtAsync(int x, int z, boolean gen, boolean urgent) {
