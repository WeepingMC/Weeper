From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Yannick Lamprecht <yannicklamprecht@live.de>
Date: Sat, 19 Jun 2021 15:08:28 +0200
Subject: [PATCH] trigger Block animation


diff --git a/src/main/java/org/bukkit/craftbukkit/CraftWorld.java b/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
index c5eb25b191cbb496be2a761d0b6eec9776319687..b2c6381cda01494d34b45c0fe2e0faadd9475d63 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
@@ -54,6 +54,7 @@ import net.minecraft.world.entity.raid.Raids;
 import net.minecraft.world.level.ChunkPos;
 import net.minecraft.world.level.ClipContext;
 import net.minecraft.world.level.GameRules;
+import net.minecraft.world.level.block.entity.BlockEntity;
 import net.minecraft.world.level.chunk.ChunkAccess;
 import net.minecraft.world.level.chunk.ChunkStatus;
 import net.minecraft.world.level.chunk.ImposterProtoChunk;
@@ -134,6 +135,7 @@ import org.bukkit.util.Consumer;
 import org.bukkit.util.RayTraceResult;
 import org.bukkit.util.StructureSearchResult;
 import org.bukkit.util.Vector;
+import org.jetbrains.annotations.NotNull;
 
 public class CraftWorld extends CraftRegionAccessor implements World {
     public static final int CUSTOM_DIMENSION_OFFSET = 10;
@@ -2233,6 +2235,17 @@ public class CraftWorld extends CraftRegionAccessor implements World {
         return (this.getHandle().dragonFight() == null) ? null : new CraftDragonBattle(this.getHandle().dragonFight());
     }
 
+
+    // Weeper start
+    @Override
+    public void triggerBlockAnimation(@NotNull Location location,
+                                      int action, int actionParameter) {
+        BlockPos position = new BlockPos(location.getX(), location.getY(), location.getZ());
+        BlockEntity blockEntity = world.getBlockEntity(position, true);
+        world.blockEvent(position, blockEntity.getBlockState().getBlock(), action, actionParameter);
+    }
+    // Weeper end
+
     @Override
     public PersistentDataContainer getPersistentDataContainer() {
         return this.persistentDataContainer;
