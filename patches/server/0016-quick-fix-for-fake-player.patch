From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Yannick Lamprecht <yannicklamprecht@live.de>
Date: Thu, 21 Dec 2023 20:53:32 +0100
Subject: [PATCH] quick fix for fake player


diff --git a/src/main/java/net/minecraft/network/syncher/SynchedEntityData.java b/src/main/java/net/minecraft/network/syncher/SynchedEntityData.java
index 58b602e550258c1062ee940bc46538dac95d8979..871b2ef3fd836d97d0e53d2e19cacd3687f46ba6 100644
--- a/src/main/java/net/minecraft/network/syncher/SynchedEntityData.java
+++ b/src/main/java/net/minecraft/network/syncher/SynchedEntityData.java
@@ -12,6 +12,7 @@ import java.util.ArrayList;
 import java.util.Iterator;
 import java.util.List;
 import java.util.Locale;
+import java.util.Map;
 import java.util.Objects;
 import java.util.concurrent.locks.ReadWriteLock;
 import java.util.concurrent.locks.ReentrantReadWriteLock;
@@ -187,6 +188,7 @@ public class SynchedEntityData {
         return this.isDirty;
     }
 
+    private static final org.bukkit.NamespacedKey skinKey = new org.bukkit.NamespacedKey("npclib", "npclib-skin"); // Weeper - quick fake player fix
     @Nullable
     public List<SynchedEntityData.DataValue<?>> packDirty() {
         List<SynchedEntityData.DataValue<?>> list = null;
@@ -200,6 +202,7 @@ public class SynchedEntityData {
 
                 if (datawatcher_item.isDirty()) {
                     datawatcher_item.setDirty(false);
+                    if (shouldSkip(datawatcher_item.getAccessor())) continue; // Weeper - quick fake player fix
                     if (list == null) {
                         list = new ArrayList();
                     }
@@ -224,7 +227,7 @@ public class SynchedEntityData {
 
         while (objectiterator.hasNext()) {
             SynchedEntityData.DataItem<?> datawatcher_item = (SynchedEntityData.DataItem) objectiterator.next();
-
+            if (shouldSkip(datawatcher_item.getAccessor())) continue; // Weeper - quick fake player fix
             if (!datawatcher_item.isSetToDefault()) {
                 if (list == null) {
                     list = new ArrayList();
@@ -296,6 +299,7 @@ public class SynchedEntityData {
 
         List<SynchedEntityData.DataValue<?>> list = new ArrayList<>();
         for (DataItem<?> dataItem : this.itemsById.values()) {
+            if (shouldSkip(dataItem.getAccessor())) continue; // Weeper - quick fake player fix
             list.add(dataItem.value());
         }
 
@@ -326,6 +330,7 @@ public class SynchedEntityData {
         List<SynchedEntityData.DataValue<?>> values = new ArrayList<>(keys.size());
         for (EntityDataAccessor<?> key : keys) {
             SynchedEntityData.DataItem<?> synchedValue = this.getItem(key);
+            if (shouldSkip(synchedValue.getAccessor())) continue; // Weeper - quick fake player fix
             values.add(synchedValue.value());
         }
 
@@ -333,6 +338,23 @@ public class SynchedEntityData {
     }
     // Paper end
 
+    // Weeper start - quick fake player fix
+
+    private static final Map<Integer, EntityDataSerializer<?>> allowedForPlayer = Map.of(
+        15, EntityDataSerializers.FLOAT,
+        16, EntityDataSerializers.INT,
+        17, EntityDataSerializers.BYTE,
+        18, EntityDataSerializers.BYTE,
+        19, EntityDataSerializers.COMPOUND_TAG,
+        20, EntityDataSerializers.COMPOUND_TAG
+    );
+    private boolean shouldSkip(EntityDataAccessor<?> dataAccessor) {
+        return entity.getBukkitEntity().getPersistentDataContainer().has(skinKey, org.bukkit.persistence.PersistentDataType.STRING) &&
+            allowedForPlayer.containsKey(dataAccessor.getId()) && !allowedForPlayer.get(dataAccessor.getId()).equals(dataAccessor.getSerializer()
+        );
+    }
+    // Weeper end - quick fake player fix
+
     public static class DataItem<T> {
 
         final EntityDataAccessor<T> accessor;
