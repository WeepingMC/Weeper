From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Yannick Lamprecht <yannicklamprecht@live.de>
Date: Tue, 12 Oct 2021 21:10:47 +0200
Subject: [PATCH] Add a may place strategy


diff --git a/src/main/java/net/minecraft/world/Container.java b/src/main/java/net/minecraft/world/Container.java
index 7437f01ca8f416e2c9150250e324af4725a4efb6..e52dd3f4b283ee390fd26be50e10b511a1f024c6 100644
--- a/src/main/java/net/minecraft/world/Container.java
+++ b/src/main/java/net/minecraft/world/Container.java
@@ -1,11 +1,14 @@
 package net.minecraft.world;
 
 import java.util.Set;
+import java.util.function.BiFunction;
+import java.util.function.Function;
 import net.minecraft.world.entity.player.Player;
 import net.minecraft.world.item.Item;
 import net.minecraft.world.item.ItemStack;
 import net.minecraft.world.item.crafting.Recipe;
 import org.bukkit.craftbukkit.entity.CraftHumanEntity;
+import org.checkerframework.checker.nullness.qual.Nullable;
 // CraftBukkit end
 
 public interface Container extends Clearable {
@@ -88,4 +91,7 @@ public interface Container extends Clearable {
 
     int MAX_STACK = 64;
     // CraftBukkit end
+    // Weeper may place strategy - start
+    default void setMayPlaceStrategy(@Nullable BiFunction<Integer, ItemStack, Boolean> mayPlaceStrategy){};
+    // Weeper may place strategy - end
 }
diff --git a/src/main/java/net/minecraft/world/inventory/AbstractContainerMenu.java b/src/main/java/net/minecraft/world/inventory/AbstractContainerMenu.java
index ca05d8e5ff1b8caa07c0e4f3e203abd46d7a7ede..d75c6884ee03495f2bf4bade0118e6ad9bc221c7 100644
--- a/src/main/java/net/minecraft/world/inventory/AbstractContainerMenu.java
+++ b/src/main/java/net/minecraft/world/inventory/AbstractContainerMenu.java
@@ -13,6 +13,8 @@ import java.util.Objects;
 import java.util.Optional;
 import java.util.OptionalInt;
 import java.util.Set;
+import java.util.function.BiFunction;
+import java.util.function.Function;
 import java.util.function.Supplier;
 import javax.annotation.Nullable;
 import net.minecraft.CrashReport;
@@ -149,6 +151,11 @@ public abstract class AbstractContainerMenu {
         return slot;
     }
 
+    public void setMayPlaceStrategy(BiFunction<Integer, ItemStack, Boolean> mayPlaceStrategy){
+        this.slots.forEach(slot -> slot.setMayPlaceStrategy(mayPlaceStrategy));
+    }
+
+
     protected DataSlot addDataSlot(DataSlot property) {
         this.dataSlots.add(property);
         this.remoteDataSlots.add(0);
diff --git a/src/main/java/net/minecraft/world/inventory/Slot.java b/src/main/java/net/minecraft/world/inventory/Slot.java
index 4468c415905f4b48aaa4269832ef725a8b9bc3ef..4ecd92517e3b8e495500f469b9ea22bf6c2b2ece 100644
--- a/src/main/java/net/minecraft/world/inventory/Slot.java
+++ b/src/main/java/net/minecraft/world/inventory/Slot.java
@@ -2,11 +2,14 @@ package net.minecraft.world.inventory;
 
 import com.mojang.datafixers.util.Pair;
 import java.util.Optional;
+import java.util.function.BiFunction;
+import java.util.function.Function;
 import javax.annotation.Nullable;
 import net.minecraft.resources.ResourceLocation;
 import net.minecraft.world.Container;
 import net.minecraft.world.entity.player.Player;
 import net.minecraft.world.item.ItemStack;
+import org.bukkit.Material;
 
 public class Slot {
     public final int slot;
@@ -14,6 +17,11 @@ public class Slot {
     public int index;
     public final int x;
     public final int y;
+    private @Nullable BiFunction<Integer, ItemStack, Boolean> mayPlaceStrategy;
+
+    public void setMayPlaceStrategy(@Nullable BiFunction<Integer, ItemStack, Boolean> mayPlaceStrategy){
+        this.mayPlaceStrategy = mayPlaceStrategy;
+    }
 
     public Slot(Container inventory, int index, int x, int y) {
         this.container = inventory;
@@ -44,7 +52,7 @@ public class Slot {
     }
 
     public boolean mayPlace(ItemStack stack) {
-        return true;
+        return this.mayPlaceStrategy != null ? mayPlaceStrategy.apply(slot, stack): true;
     }
 
     public ItemStack getItem() {
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftHumanEntity.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftHumanEntity.java
index 7c7d05852dd463331110d1dcb71b4d4f5312900f..4e103861451afc78df9d8efa2e83c5ee5ffb4a95 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftHumanEntity.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftHumanEntity.java
@@ -1,5 +1,6 @@
 package org.bukkit.craftbukkit.entity;
 
+import com.google.common.base.Function;
 import com.google.common.base.Preconditions;
 import com.google.common.collect.ImmutableSet;
 import java.util.ArrayList;
@@ -7,6 +8,8 @@ import java.util.Arrays;
 import java.util.Collection;
 import java.util.Optional;
 import java.util.Set;
+import java.util.function.BiFunction;
+
 import net.minecraft.core.BlockPos;
 import net.minecraft.nbt.CompoundTag;
 import net.minecraft.network.chat.Component;
@@ -14,6 +17,7 @@ import net.minecraft.network.protocol.game.ClientboundOpenScreenPacket;
 import net.minecraft.network.protocol.game.ServerboundContainerClosePacket;
 import net.minecraft.server.level.ServerLevel;
 import net.minecraft.server.level.ServerPlayer;
+import net.minecraft.world.Container;
 import net.minecraft.world.MenuProvider;
 import net.minecraft.world.entity.Entity;
 import net.minecraft.world.entity.EntityType;
@@ -62,6 +66,7 @@ import org.bukkit.permissions.Permission;
 import org.bukkit.permissions.PermissionAttachment;
 import org.bukkit.permissions.PermissionAttachmentInfo;
 import org.bukkit.plugin.Plugin;
+import org.checkerframework.checker.nullness.qual.Nullable;
 
 public class CraftHumanEntity extends CraftLivingEntity implements HumanEntity {
     private CraftInventoryPlayer inventory;
@@ -294,6 +299,10 @@ public class CraftHumanEntity extends CraftLivingEntity implements HumanEntity {
 
     @Override
     public InventoryView openInventory(Inventory inventory) {
+        return openInventory(inventory, null);
+    }
+    @Override
+    public InventoryView openInventory(Inventory inventory, BiFunction<Integer, ItemStack, Boolean> mayPlaceStrategy) {
         if (!(this.getHandle() instanceof ServerPlayer)) return null;
         ServerPlayer player = (ServerPlayer) this.getHandle();
         AbstractContainerMenu formerContainer = this.getHandle().containerMenu;
@@ -323,7 +332,7 @@ public class CraftHumanEntity extends CraftLivingEntity implements HumanEntity {
         if (iinventory instanceof MenuProvider) {
             this.getHandle().openMenu(iinventory);
         } else {
-            CraftHumanEntity.openCustomInventory(inventory, player, container);
+                CraftHumanEntity.openCustomInventory(inventory, player, container, mayPlaceStrategy);
         }
 
         if (this.getHandle().containerMenu == formerContainer) {
@@ -334,9 +343,15 @@ public class CraftHumanEntity extends CraftLivingEntity implements HumanEntity {
     }
 
     private static void openCustomInventory(Inventory inventory, ServerPlayer player, MenuType<?> windowType) {
+        openCustomInventory( inventory, player, windowType, null);
+    }
+    private static void openCustomInventory(Inventory inventory, ServerPlayer player, MenuType<?> windowType, @Nullable BiFunction<Integer, ItemStack, Boolean> mayPlaceStrategy) {
         if (player.connection == null) return;
         Preconditions.checkArgument(windowType != null, "Unknown windowType");
         AbstractContainerMenu container = new CraftContainer(inventory, player, player.nextContainerCounter());
+        if(mayPlaceStrategy != null){
+            container.setMayPlaceStrategy((slot, itemStack) -> mayPlaceStrategy.apply(slot,CraftItemStack.asBukkitCopy(itemStack)));
+        }
 
         container = CraftEventFactory.callInventoryOpenEvent(player, container);
         if (container == null) return;
diff --git a/src/main/java/org/bukkit/craftbukkit/inventory/CraftInventory.java b/src/main/java/org/bukkit/craftbukkit/inventory/CraftInventory.java
index 396a4ae3d5a829eda78ef98561333aea300aa722..ec77aa8bc6e6917dbdc0d58064d835929745984a 100644
--- a/src/main/java/org/bukkit/craftbukkit/inventory/CraftInventory.java
+++ b/src/main/java/org/bukkit/craftbukkit/inventory/CraftInventory.java
@@ -3,6 +3,8 @@ package org.bukkit.craftbukkit.inventory;
 import java.util.HashMap;
 import java.util.List;
 import java.util.ListIterator;
+import java.util.function.BiFunction;
+import java.util.function.Function;
 import net.minecraft.world.Container;
 import net.minecraft.world.inventory.CraftingContainer;
 import net.minecraft.world.inventory.MerchantContainer;
@@ -26,6 +28,7 @@ import org.bukkit.entity.HumanEntity;
 import org.bukkit.event.inventory.InventoryType;
 import org.bukkit.inventory.Inventory;
 import org.bukkit.inventory.InventoryHolder;
+import org.bukkit.inventory.InventoryView;
 import org.bukkit.inventory.ItemStack;
 
 public class CraftInventory implements Inventory {
@@ -567,4 +570,9 @@ public class CraftInventory implements Inventory {
     public Location getLocation() {
         return this.inventory.getLocation();
     }
+
+    @Override
+    public void setMayPlaceStrategy(BiFunction<Integer, ItemStack, Boolean> mayPlaceStrategy) {
+        this.inventory.setMayPlaceStrategy((slot, itemStack) -> mayPlaceStrategy.apply(slot, CraftItemStack.asBukkitCopy(itemStack)));
+    }
 }
