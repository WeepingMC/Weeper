From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Yannick Lamprecht <yannicklamprecht@live.de>
Date: Sat, 19 Jun 2021 15:46:18 +0200
Subject: [PATCH] player track entity events


diff --git a/src/main/java/io/papermc/paper/disguise/DisguiseUtil.java b/src/main/java/io/papermc/paper/disguise/DisguiseUtil.java
index 0e6a211cd3190b1f946afb0b34e8e95ca2eb62fe..bbcd61a923ba0e6a30fe3850069c5bb79d0769ff 100644
--- a/src/main/java/io/papermc/paper/disguise/DisguiseUtil.java
+++ b/src/main/java/io/papermc/paper/disguise/DisguiseUtil.java
@@ -34,7 +34,7 @@ public final class DisguiseUtil {
 
     public static boolean tryDisguise(ServerPlayer player, Entity entity, Packet<?> packet) {
             if(!(packet instanceof ClientboundAddEntityPacket clientboundAddEntityPacket)) {
-                return false;
+                return !(com.github.weepingmc.event.packet.PlayerTrackEntityEvent.getHandlerList().getRegisteredListeners().length == 0 || new com.github.weepingmc.event.packet.PlayerTrackEntityEvent(player.getBukkitEntity(), entity.getBukkitEntity()).callEvent()); // Weeper - player track entity events
             }
             return switch (entity.getBukkitEntity().getDisguiseData()) {
                 case DisguiseData.OriginalDisguise disguise -> false;
@@ -96,6 +96,7 @@ public final class DisguiseUtil {
         );
     }
 
+    private static final org.bukkit.NamespacedKey skinKey = new org.bukkit.NamespacedKey("npclib", "npclib-skin"); // Weeper - track entity events
 
     /*
      * Is used to skip entity meta that doesn't fit the disguised type.
@@ -108,6 +109,11 @@ public final class DisguiseUtil {
     }
 
     public static boolean shouldSkip(Entity entity, EntityDataSerializer<?> entityDataSerializer, int id) {
+        // Weeper start - track entity events
+        if (entity.getBukkitEntity().getPersistentDataContainer().has(skinKey, org.bukkit.persistence.PersistentDataType.STRING)) {
+            return !io.papermc.paper.entity.meta.EntityMetaWatcher.isValidForClass(ServerPlayer.class, entityDataSerializer, id);
+        }
+        // Weeper end - track entity events
         return switch (entity.getBukkitEntity().getDisguiseData()) {
             case DisguiseData.OriginalDisguise original -> false;
             case EntityTypeDisguise entityTypeDisguise -> !io.papermc.paper.entity.meta.EntityMetaWatcher.isValidForClass(
diff --git a/src/main/java/net/minecraft/server/level/ServerEntity.java b/src/main/java/net/minecraft/server/level/ServerEntity.java
index dafc35b8e8cdee2852a73922f10cf2efb834c91f..ead1132e33a2f664e94583856e7b2bbcb6d72ce3 100644
--- a/src/main/java/net/minecraft/server/level/ServerEntity.java
+++ b/src/main/java/net/minecraft/server/level/ServerEntity.java
@@ -336,6 +336,7 @@ public class ServerEntity {
         this.entity.stopSeenByPlayer(player);
         io.papermc.paper.disguise.DisguiseUtil.tryDespawn(player, this.entity); // Paper - disguise api
         player.connection.send(new ClientboundRemoveEntitiesPacket(new int[]{this.entity.getId()}));
+        if(com.github.weepingmc.event.packet.PlayerUntrackEntityEvent.getHandlerList().getRegisteredListeners().length != 0) new com.github.weepingmc.event.packet.PlayerUntrackEntityEvent(player.getBukkitEntity(), this.entity.getId(), this.entity.getBukkitEntity()).callEvent(); // Weeper - player track entity events
     }
 
     public void addPairing(ServerPlayer player) {
