From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Yannick Lamprecht <yannicklamprecht@live.de>
Date: Sat, 16 Mar 2024 23:30:52 +0100
Subject: [PATCH] access transformer changes

todo move to at file when at works for forks

diff --git a/src/main/java/net/minecraft/world/entity/Entity.java b/src/main/java/net/minecraft/world/entity/Entity.java
index e0827d8bb3fa17d4f590a5342ff41a514f623e68..ff5727135e618df03f8be4b21bccfc88693e0ed2 100644
--- a/src/main/java/net/minecraft/world/entity/Entity.java
+++ b/src/main/java/net/minecraft/world/entity/Entity.java
@@ -354,7 +354,7 @@ public abstract class Entity implements SyncedDataHolder, Nameable, EntityAccess
     public int invulnerableTime;
     protected boolean firstTick;
     protected final SynchedEntityData entityData;
-    protected static final EntityDataAccessor<Byte> DATA_SHARED_FLAGS_ID = SynchedEntityData.defineId(Entity.class, EntityDataSerializers.BYTE);
+    public static final EntityDataAccessor<Byte> DATA_SHARED_FLAGS_ID = SynchedEntityData.defineId(Entity.class, EntityDataSerializers.BYTE); // Weeper private -> public
     protected static final int FLAG_ONFIRE = 0;
     private static final int FLAG_SHIFT_KEY_DOWN = 1;
     private static final int FLAG_SPRINTING = 3;
@@ -363,11 +363,11 @@ public abstract class Entity implements SyncedDataHolder, Nameable, EntityAccess
     protected static final int FLAG_GLOWING = 6;
     protected static final int FLAG_FALL_FLYING = 7;
     private static final EntityDataAccessor<Integer> DATA_AIR_SUPPLY_ID = SynchedEntityData.defineId(Entity.class, EntityDataSerializers.INT);
-    private static final EntityDataAccessor<Optional<Component>> DATA_CUSTOM_NAME = SynchedEntityData.defineId(Entity.class, EntityDataSerializers.OPTIONAL_COMPONENT);
-    private static final EntityDataAccessor<Boolean> DATA_CUSTOM_NAME_VISIBLE = SynchedEntityData.defineId(Entity.class, EntityDataSerializers.BOOLEAN);
+    public static final EntityDataAccessor<Optional<Component>> DATA_CUSTOM_NAME = SynchedEntityData.defineId(Entity.class, EntityDataSerializers.OPTIONAL_COMPONENT); // Weeper private -> public
+    public static final EntityDataAccessor<Boolean> DATA_CUSTOM_NAME_VISIBLE = SynchedEntityData.defineId(Entity.class, EntityDataSerializers.BOOLEAN); // Weeper private -> public
     private static final EntityDataAccessor<Boolean> DATA_SILENT = SynchedEntityData.defineId(Entity.class, EntityDataSerializers.BOOLEAN);
     private static final EntityDataAccessor<Boolean> DATA_NO_GRAVITY = SynchedEntityData.defineId(Entity.class, EntityDataSerializers.BOOLEAN);
-    protected static final EntityDataAccessor<net.minecraft.world.entity.Pose> DATA_POSE = SynchedEntityData.defineId(Entity.class, EntityDataSerializers.POSE);
+    public static final EntityDataAccessor<net.minecraft.world.entity.Pose> DATA_POSE = SynchedEntityData.defineId(Entity.class, EntityDataSerializers.POSE); // Weeper -> public
     private static final EntityDataAccessor<Integer> DATA_TICKS_FROZEN = SynchedEntityData.defineId(Entity.class, EntityDataSerializers.INT);
     private EntityInLevelCallback levelCallback;
     private final VecDeltaCodec packetPositionCodec;
diff --git a/src/main/java/net/minecraft/world/entity/LivingEntity.java b/src/main/java/net/minecraft/world/entity/LivingEntity.java
index ccd9dff20a60f019e0c320acfb526b8bf3e5f806..f7dd75ceb6e14858ffc0cfb5a6569e48e7434c57 100644
--- a/src/main/java/net/minecraft/world/entity/LivingEntity.java
+++ b/src/main/java/net/minecraft/world/entity/LivingEntity.java
@@ -191,7 +191,7 @@ public abstract class LivingEntity extends Entity implements Attackable {
     private static final EntityDataAccessor<Boolean> DATA_EFFECT_AMBIENCE_ID = SynchedEntityData.defineId(LivingEntity.class, EntityDataSerializers.BOOLEAN);
     public static final EntityDataAccessor<Integer> DATA_ARROW_COUNT_ID = SynchedEntityData.defineId(LivingEntity.class, EntityDataSerializers.INT);
     private static final EntityDataAccessor<Integer> DATA_STINGER_COUNT_ID = SynchedEntityData.defineId(LivingEntity.class, EntityDataSerializers.INT);
-    private static final EntityDataAccessor<Optional<BlockPos>> SLEEPING_POS_ID = SynchedEntityData.defineId(LivingEntity.class, EntityDataSerializers.OPTIONAL_BLOCK_POS);
+    public static final EntityDataAccessor<Optional<BlockPos>> SLEEPING_POS_ID = SynchedEntityData.defineId(LivingEntity.class, EntityDataSerializers.OPTIONAL_BLOCK_POS); // Weeper private -> public
     private static final int PARTICLE_FREQUENCY_WHEN_INVISIBLE = 15;
     protected static final EntityDimensions SLEEPING_DIMENSIONS = EntityDimensions.fixed(0.2F, 0.2F).withEyeHeight(0.2F);
     public static final float EXTRA_RENDER_CULLING_SIZE_WITH_BIG_HAT = 0.5F;
diff --git a/src/main/java/net/minecraft/world/entity/animal/Bee.java b/src/main/java/net/minecraft/world/entity/animal/Bee.java
index 1b3978f4ea7e8491e0c0cb6de23c141f44fab414..f8293c8cf3702a2eab78f8b4c5bebc49004895a6 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Bee.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Bee.java
@@ -697,7 +697,7 @@ public class Bee extends Animal implements NeutralMob, FlyingAnimal {
         this.hivePos = pos;
     }
 
-    private class BeePollinateGoal extends Bee.BaseBeeGoal {
+    public class BeePollinateGoal extends Bee.BaseBeeGoal { // Weeper private -> public
 
         private static final int MIN_POLLINATION_TICKS = 400;
         private static final int MIN_FIND_FLOWER_RETRY_COOLDOWN = 20;
@@ -883,7 +883,7 @@ public class Bee extends Animal implements NeutralMob, FlyingAnimal {
         }
     }
 
-    private class BeeLookControl extends LookControl {
+    public class BeeLookControl extends LookControl { // Weeper private -> public
 
         BeeLookControl(final Mob entity) {
             super(entity);
@@ -919,7 +919,7 @@ public class Bee extends Animal implements NeutralMob, FlyingAnimal {
         }
     }
 
-    private class BeeEnterHiveGoal extends Bee.BaseBeeGoal {
+    public class BeeEnterHiveGoal extends Bee.BaseBeeGoal { // Weeper private -> public
 
         BeeEnterHiveGoal() {
             super();
@@ -962,7 +962,7 @@ public class Bee extends Animal implements NeutralMob, FlyingAnimal {
         }
     }
 
-    private class BeeLocateHiveGoal extends Bee.BaseBeeGoal {
+    public class BeeLocateHiveGoal extends Bee.BaseBeeGoal { // Weeper private -> public
 
         BeeLocateHiveGoal() {
             super();
@@ -1194,7 +1194,7 @@ public class Bee extends Animal implements NeutralMob, FlyingAnimal {
         }
     }
 
-    private class BeeGrowCropGoal extends Bee.BaseBeeGoal {
+    public class BeeGrowCropGoal extends Bee.BaseBeeGoal { // Weeper private -> public
 
         static final int GROW_CHANCE = 30;
 
@@ -1258,7 +1258,7 @@ public class Bee extends Animal implements NeutralMob, FlyingAnimal {
         }
     }
 
-    private class BeeWanderGoal extends Goal {
+    public class BeeWanderGoal extends Goal { // Weeper private -> public
 
         private static final int WANDER_THRESHOLD = 22;
 
@@ -1305,7 +1305,7 @@ public class Bee extends Animal implements NeutralMob, FlyingAnimal {
         }
     }
 
-    private class BeeHurtByOtherGoal extends HurtByTargetGoal {
+    public class BeeHurtByOtherGoal extends HurtByTargetGoal { // Weeper private -> public
 
         BeeHurtByOtherGoal(final Bee entitybee) {
             super(entitybee);
@@ -1325,7 +1325,7 @@ public class Bee extends Animal implements NeutralMob, FlyingAnimal {
         }
     }
 
-    private static class BeeBecomeAngryTargetGoal extends NearestAttackableTargetGoal<Player> {
+    public static class BeeBecomeAngryTargetGoal extends NearestAttackableTargetGoal<Player> { // Weeper private -> public
 
         BeeBecomeAngryTargetGoal(Bee bee) {
             // Objects.requireNonNull(entitybee); // CraftBukkit - decompile error
@@ -1356,7 +1356,7 @@ public class Bee extends Animal implements NeutralMob, FlyingAnimal {
         }
     }
 
-    private abstract class BaseBeeGoal extends Goal {
+    public abstract class BaseBeeGoal extends Goal { // Weeper private -> public
 
         BaseBeeGoal() {}
 
diff --git a/src/main/java/net/minecraft/world/entity/animal/Cat.java b/src/main/java/net/minecraft/world/entity/animal/Cat.java
index 23d4dcc82115fd1a0a77565a0472304042d5f12d..382ad9448a9a5c425ebd9c64624287911edaa24b 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Cat.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Cat.java
@@ -507,7 +507,7 @@ public class Cat extends TamableAnimal implements VariantHolder<Holder<CatVarian
         }
     }
 
-    private static class CatRelaxOnOwnerGoal extends Goal {
+    public static class CatRelaxOnOwnerGoal extends Goal { // Weeper private -> public
 
         private final Cat cat;
         @Nullable
@@ -653,7 +653,7 @@ public class Cat extends TamableAnimal implements VariantHolder<Holder<CatVarian
         }
     }
 
-    private static class CatAvoidEntityGoal<T extends LivingEntity> extends AvoidEntityGoal<T> {
+    public static class CatAvoidEntityGoal<T extends LivingEntity> extends AvoidEntityGoal<T> { // Weeper private -> public
 
         private final Cat cat;
 
diff --git a/src/main/java/net/minecraft/world/entity/raid/Raider.java b/src/main/java/net/minecraft/world/entity/raid/Raider.java
index bbf21ea433f9e3963aac0ede597ed8d3c8e50ed8..804b5e1e4d9b9f51938a65b5eb656256c7d85d3b 100644
--- a/src/main/java/net/minecraft/world/entity/raid/Raider.java
+++ b/src/main/java/net/minecraft/world/entity/raid/Raider.java
@@ -332,7 +332,7 @@ public abstract class Raider extends PatrollingMonster {
         }
     }
 
-    private static class RaiderMoveThroughVillageGoal extends Goal {
+    public static class RaiderMoveThroughVillageGoal extends Goal { // Weeper private -> public
 
         private final Raider raider;
         private final double speedModifier;
