From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Yannick Lamprecht <yannicklamprecht@live.de>
Date: Sat, 16 Mar 2024 23:30:52 +0100
Subject: [PATCH] access transformer changes

todo move to at file when at works for forks

diff --git a/src/main/java/net/minecraft/world/entity/Entity.java b/src/main/java/net/minecraft/world/entity/Entity.java
index 27618d07d718cb2a5783536e11d56f712303487b..c7452071bf578e1155ea2a31e7e1fcb8bdfc0fe7 100644
--- a/src/main/java/net/minecraft/world/entity/Entity.java
+++ b/src/main/java/net/minecraft/world/entity/Entity.java
@@ -312,7 +312,7 @@ public abstract class Entity implements SyncedDataHolder, Nameable, EntityAccess
     public int invulnerableTime;
     protected boolean firstTick;
     protected final SynchedEntityData entityData;
-    protected static final EntityDataAccessor<Byte> DATA_SHARED_FLAGS_ID = SynchedEntityData.defineId(Entity.class, EntityDataSerializers.BYTE);
+    public static final EntityDataAccessor<Byte> DATA_SHARED_FLAGS_ID = SynchedEntityData.defineId(Entity.class, EntityDataSerializers.BYTE); // Weeper private -> public
     protected static final int FLAG_ONFIRE = 0;
     private static final int FLAG_SHIFT_KEY_DOWN = 1;
     private static final int FLAG_SPRINTING = 3;
@@ -321,11 +321,11 @@ public abstract class Entity implements SyncedDataHolder, Nameable, EntityAccess
     protected static final int FLAG_GLOWING = 6;
     protected static final int FLAG_FALL_FLYING = 7;
     private static final EntityDataAccessor<Integer> DATA_AIR_SUPPLY_ID = SynchedEntityData.defineId(Entity.class, EntityDataSerializers.INT);
-    private static final EntityDataAccessor<Optional<Component>> DATA_CUSTOM_NAME = SynchedEntityData.defineId(Entity.class, EntityDataSerializers.OPTIONAL_COMPONENT);
-    private static final EntityDataAccessor<Boolean> DATA_CUSTOM_NAME_VISIBLE = SynchedEntityData.defineId(Entity.class, EntityDataSerializers.BOOLEAN);
+    public static final EntityDataAccessor<Optional<Component>> DATA_CUSTOM_NAME = SynchedEntityData.defineId(Entity.class, EntityDataSerializers.OPTIONAL_COMPONENT); // Weeper private -> public
+    public static final EntityDataAccessor<Boolean> DATA_CUSTOM_NAME_VISIBLE = SynchedEntityData.defineId(Entity.class, EntityDataSerializers.BOOLEAN); // Weeper private -> public
     private static final EntityDataAccessor<Boolean> DATA_SILENT = SynchedEntityData.defineId(Entity.class, EntityDataSerializers.BOOLEAN);
     private static final EntityDataAccessor<Boolean> DATA_NO_GRAVITY = SynchedEntityData.defineId(Entity.class, EntityDataSerializers.BOOLEAN);
-    protected static final EntityDataAccessor<net.minecraft.world.entity.Pose> DATA_POSE = SynchedEntityData.defineId(Entity.class, EntityDataSerializers.POSE);
+    public static final EntityDataAccessor<net.minecraft.world.entity.Pose> DATA_POSE = SynchedEntityData.defineId(Entity.class, EntityDataSerializers.POSE); // Weeper -> public
     private static final EntityDataAccessor<Integer> DATA_TICKS_FROZEN = SynchedEntityData.defineId(Entity.class, EntityDataSerializers.INT);
     private EntityInLevelCallback levelCallback;
     private final VecDeltaCodec packetPositionCodec;
diff --git a/src/main/java/net/minecraft/world/entity/LivingEntity.java b/src/main/java/net/minecraft/world/entity/LivingEntity.java
index 96b4fbe4a4655777ff10b32e3257e2fac2aba12a..d78a7c34d8a9bff8121c865d50db0924fe88239c 100644
--- a/src/main/java/net/minecraft/world/entity/LivingEntity.java
+++ b/src/main/java/net/minecraft/world/entity/LivingEntity.java
@@ -192,7 +192,7 @@ public abstract class LivingEntity extends Entity implements Attackable {
     private static final EntityDataAccessor<Boolean> DATA_EFFECT_AMBIENCE_ID = SynchedEntityData.defineId(LivingEntity.class, EntityDataSerializers.BOOLEAN);
     public static final EntityDataAccessor<Integer> DATA_ARROW_COUNT_ID = SynchedEntityData.defineId(LivingEntity.class, EntityDataSerializers.INT);
     private static final EntityDataAccessor<Integer> DATA_STINGER_COUNT_ID = SynchedEntityData.defineId(LivingEntity.class, EntityDataSerializers.INT);
-    private static final EntityDataAccessor<Optional<BlockPos>> SLEEPING_POS_ID = SynchedEntityData.defineId(LivingEntity.class, EntityDataSerializers.OPTIONAL_BLOCK_POS);
+    public static final EntityDataAccessor<Optional<BlockPos>> SLEEPING_POS_ID = SynchedEntityData.defineId(LivingEntity.class, EntityDataSerializers.OPTIONAL_BLOCK_POS); // Weeper private -> public
     private static final int PARTICLE_FREQUENCY_WHEN_INVISIBLE = 15;
     protected static final EntityDimensions SLEEPING_DIMENSIONS = EntityDimensions.fixed(0.2F, 0.2F).withEyeHeight(0.2F);
     public static final float EXTRA_RENDER_CULLING_SIZE_WITH_BIG_HAT = 0.5F;
diff --git a/src/main/java/net/minecraft/world/entity/animal/Bee.java b/src/main/java/net/minecraft/world/entity/animal/Bee.java
index ca706f1ac5f4248164daa613eef81e46b3e5a210..30cbf3a98b6674b58781665ba2e890d95a19e2e6 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Bee.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Bee.java
@@ -738,7 +738,7 @@ public class Bee extends Animal implements NeutralMob, FlyingAnimal {
         return state.is(BlockTags.BEE_ATTRACTIVE) ? ((Boolean) state.getValueOrElse(BlockStateProperties.WATERLOGGED, false) ? false : (state.is(Blocks.SUNFLOWER) ? state.getValue(DoublePlantBlock.HALF) == DoubleBlockHalf.UPPER : true)) : false;
     }
 
-    private class BeeLookControl extends LookControl {
+    public class BeeLookControl extends LookControl { // Weeper private -> public
 
         BeeLookControl(final Mob entity) {
             super(entity);
@@ -1055,7 +1055,7 @@ public class Bee extends Animal implements NeutralMob, FlyingAnimal {
         }
     }
 
-    private class BeeLocateHiveGoal extends Bee.BaseBeeGoal {
+    public class BeeLocateHiveGoal extends Bee.BaseBeeGoal { // Weeper private -> public
 
         BeeLocateHiveGoal() {
             super();
@@ -1284,7 +1284,7 @@ public class Bee extends Animal implements NeutralMob, FlyingAnimal {
         }
     }
 
-    private class BeeGrowCropGoal extends Bee.BaseBeeGoal {
+    public class BeeGrowCropGoal extends Bee.BaseBeeGoal { // Weeper private -> public
 
         static final int GROW_CHANCE = 30;
 
@@ -1353,7 +1353,7 @@ public class Bee extends Animal implements NeutralMob, FlyingAnimal {
         }
     }
 
-    private class BeeWanderGoal extends Goal {
+    public class BeeWanderGoal extends Goal { // Weeper private -> public
 
         BeeWanderGoal() {
             this.setFlags(EnumSet.of(Goal.Flag.MOVE));
@@ -1404,7 +1404,7 @@ public class Bee extends Animal implements NeutralMob, FlyingAnimal {
         }
     }
 
-    private class BeeHurtByOtherGoal extends HurtByTargetGoal {
+    public class BeeHurtByOtherGoal extends HurtByTargetGoal { // Weeper private -> public
 
         BeeHurtByOtherGoal(final Bee entitybee) {
             super(entitybee);
@@ -1424,7 +1424,7 @@ public class Bee extends Animal implements NeutralMob, FlyingAnimal {
         }
     }
 
-    private static class BeeBecomeAngryTargetGoal extends NearestAttackableTargetGoal<Player> {
+    public static class BeeBecomeAngryTargetGoal extends NearestAttackableTargetGoal<Player> { // Weeper private -> public
 
         BeeBecomeAngryTargetGoal(Bee bee) {
             // Objects.requireNonNull(entitybee); // CraftBukkit - decompile error
@@ -1455,7 +1455,7 @@ public class Bee extends Animal implements NeutralMob, FlyingAnimal {
         }
     }
 
-    private abstract class BaseBeeGoal extends Goal {
+    public abstract class BaseBeeGoal extends Goal { // Weeper private -> public
 
         BaseBeeGoal() {}
 
diff --git a/src/main/java/net/minecraft/world/entity/animal/Cat.java b/src/main/java/net/minecraft/world/entity/animal/Cat.java
index 989b7be74eaeba7f40eac87c7ee7f252cb0c05c9..6723441c2469e263d9a16facd471de23729b00bd 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Cat.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Cat.java
@@ -517,7 +517,7 @@ public class Cat extends TamableAnimal implements VariantHolder<Holder<CatVarian
         }
     }
 
-    private static class CatRelaxOnOwnerGoal extends Goal {
+    public static class CatRelaxOnOwnerGoal extends Goal { // Weeper private -> public
 
         private final Cat cat;
         @Nullable
@@ -655,7 +655,7 @@ public class Cat extends TamableAnimal implements VariantHolder<Holder<CatVarian
         }
     }
 
-    private static class CatAvoidEntityGoal<T extends LivingEntity> extends AvoidEntityGoal<T> {
+    public static class CatAvoidEntityGoal<T extends LivingEntity> extends AvoidEntityGoal<T> { // Weeper private -> public
 
         private final Cat cat;
 
diff --git a/src/main/java/net/minecraft/world/entity/raid/Raider.java b/src/main/java/net/minecraft/world/entity/raid/Raider.java
index cee1e4db2312efb4843c4b6dc18f4af10b91d304..d974da1aaf25c2cd50e3373e89898afd0670a2e2 100644
--- a/src/main/java/net/minecraft/world/entity/raid/Raider.java
+++ b/src/main/java/net/minecraft/world/entity/raid/Raider.java
@@ -381,7 +381,7 @@ public abstract class Raider extends PatrollingMonster {
         }
     }
 
-    private static class RaiderMoveThroughVillageGoal extends Goal {
+    public static class RaiderMoveThroughVillageGoal extends Goal { // Weeper private -> public
 
         private final Raider raider;
         private final double speedModifier;
