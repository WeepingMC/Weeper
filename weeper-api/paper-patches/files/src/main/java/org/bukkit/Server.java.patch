--- a/src/main/java/org/bukkit/Server.java
+++ b/src/main/java/org/bukkit/Server.java
@@ -2716,4 +_,30 @@
      */
     void allowPausing(@NotNull org.bukkit.plugin.Plugin plugin, boolean value);
     // Paper end - API to check if the server is sleeping
+    // Paper start - add disguise api
+    /**
+    * Creates a new skinparts builder used for overriding skin settings
+    * @return a new builder for skin parts
+    */
+    com.destroystokyo.paper.SkinParts.@NotNull Builder newSkinPartsBuilder();
+    // Paper end - add disguise api
+    // Weeper start - packet support
+    /**
+     * Returns the {@link com.github.weepingmc.packet.PacketPipeline}
+     *
+     * @return the packet pipeline
+     */
+    @NotNull
+    com.github.weepingmc.packet.PacketPipeline getPacketPipeline();
+    // Weeper end - packet support
+    // Weeper start - allow offline editing of playerData
+    /**
+     * Edits the information of an offline player.
+     *
+     * @param playerUUID The UUID of the offline player to edit.
+     * @param editPlayerConsumer A consumer function that takes an {@link com.github.weepingmc.offline.EditPlayer} object as input,
+     *                          allowing the caller to perform edits on the player's information.
+     */
+    void editOfflinePlayer(@NotNull UUID playerUUID, @NotNull Consumer<com.github.weepingmc.offline.EditPlayer> editPlayerConsumer);
+    // Weeper end - allow offline editing of playerData
 }
