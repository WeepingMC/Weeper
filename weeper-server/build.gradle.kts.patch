--- a/paper-server/build.gradle.kts
+++ b/paper-server/build.gradle.kts
@@ -1,9 +_,8 @@
 import io.papermc.paperweight.attribute.DevBundleOutput
-import io.papermc.paperweight.util.*
-import io.papermc.paperweight.util.data.FileEntry
-import paper.libs.com.google.gson.annotations.SerializedName
+import io.papermc.paperweight.util.Git
+import io.papermc.paperweight.util.path
+import io.papermc.paperweight.util.upstreamsDirectory
 import java.time.Instant
-import kotlin.io.path.readText
 
 plugins {
     `java-library`
@@ -24,6 +_,21 @@
     minecraftVersion = providers.gradleProperty("mcVersion")
     gitFilePatches = false
 
+    val fork = forks.register("weeper") {
+            upstream.patchDir("paperServer") {
+                    upstreamPath = "paper-server"
+                    excludes = setOf("src/minecraft", "patches", "build.gradle.kts", "src/generated")
+                    patchesDir = rootDirectory.dir("weeper-server/paper-patches")
+                    outputDir = rootDirectory.dir("paper-server")
+            }
+    }
+
+    activeFork = fork
+
+    paper {
+            paperServerDir = upstreamsDirectory().map { it.dir("paper/paper-server") }
+    }
+    
     spigot {
         enabled = true
         buildDataRef = "281ac0de7a76d808753ede97d11b034bc801b63d"
@@ -105,7 +_,26 @@
     }
 }
 
-val log4jPlugins = sourceSets.create("log4jPlugins")
+sourceSets {
+    main {
+        java {
+            srcDir("../paper-server/src/main/java")
+            resources { srcDir("../paper-server/src/main/resources") }
+        }
+    }
+    test {
+        java {
+            srcDir("../paper-server/src/test/java")
+            resources { srcDir("../paper-server/src/test/resources") }
+        }
+    }
+}
+
+val log4jPlugins = sourceSets.create("log4jPlugins") {
+    java { srcDir("../paper-server/src/log4jPlugins/java") }
+}
+
+
 configurations.named(log4jPlugins.compileClasspathConfigurationName) {
     extendsFrom(configurations.compileClasspath.get())
 }
@@ -127,7 +_,7 @@
 }
 
 dependencies {
-    implementation(project(":paper-api"))
+    implementation(project(":weeper-api")) // Weeper - api changes
     implementation("ca.spottedleaf:concurrentutil:0.0.3")
     implementation("org.jline:jline-terminal-ffm:3.27.1") // use ffm on java 22+
     implementation("org.jline:jline-terminal-jni:3.27.1") // fall back to jni on java 21
@@ -203,14 +_,14 @@
         val gitBranch = git.exec(providers, "rev-parse", "--abbrev-ref", "HEAD").get().trim()
         attributes(
             "Main-Class" to "org.bukkit.craftbukkit.Main",
-            "Implementation-Title" to "Paper",
+            "Implementation-Title" to "Weeper", // Weeper - rebranding
             "Implementation-Version" to implementationVersion,
             "Implementation-Vendor" to date,
-            "Specification-Title" to "Paper",
+            "Specification-Title" to "Weeper", // Weeper - rebranding
             "Specification-Version" to project.version,
-            "Specification-Vendor" to "Paper Team",
-            "Brand-Id" to "papermc:paper",
-            "Brand-Name" to "Paper",
+            "Specification-Vendor" to "WeepingMC Team", // WeepingMC - rebranding
+            "Brand-Id" to "weepingmc:weeper", // Weeper - rebranding
+            "Brand-Name" to "Weeper", // Weeper - rebranding
             "Build-Number" to (build ?: ""),
             "Build-Time" to buildTime.toString(),
             "Git-Branch" to gitBranch,
