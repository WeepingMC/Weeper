--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -392,7 +_,21 @@
         return ca.spottedleaf.moonrise.common.util.TickThread.isTickThread();
     }
     // Paper end - Folia reagion threading API
+    // Paper start - add disguise api
+    @Override
+    public com.destroystokyo.paper.SkinParts.@org.jetbrains.annotations.NotNull Builder newSkinPartsBuilder() {
+        return com.destroystokyo.paper.PaperSkinParts.builder();
+    }
+    // Paper end - add disguise api
+    private final com.github.weepingmc.packet.PacketPipeline packetPipeline; // Weeper - packet support
 
+    // Weeper start - allow offline editing of playerData
+    @Override
+    public void editOfflinePlayer(UUID playerUUID, java.util.function.Consumer<com.github.weepingmc.offline.EditPlayer> editPlayerConsumer) {
+        GameProfile gameProfile = ((CraftPlayerProfile) createPlayerProfile(playerUUID)).buildGameProfile();
+        playerList.editOfflinePlayer(gameProfile, editPlayerConsumer);
+    }
+    // Weeper end - allow offline editing of playerData
     static {
         ConfigurationSerialization.registerClass(CraftOfflinePlayer.class);
         ConfigurationSerialization.registerClass(CraftPlayerProfile.class);
@@ -488,6 +_,7 @@
         this.potionBrewer = new io.papermc.paper.potion.PaperPotionBrewer(console); // Paper - custom potion mixes
         datapackManager = new io.papermc.paper.datapack.PaperDatapackManager(console.getPackRepository()); // Paper
         this.spark = new io.papermc.paper.SparksFly(this); // Paper - spark
+        this.packetPipeline = new com.github.weepingmc.packet.CraftPacketPipeline(() -> ((CraftWorld)getWorlds().getFirst()).getHandle()); // Weeper - packet support
     }
 
     public boolean getCommandBlockOverride(String command) {
@@ -3181,4 +_,10 @@
     public void allowPausing(final Plugin plugin, final boolean value) {
         this.console.addPluginAllowingSleep(plugin.getName(), value);
     }
+    //  Weeper start - packet support
+    @Override
+    public com.github.weepingmc.packet.PacketPipeline getPacketPipeline() {
+        return packetPipeline;
+    }
+    // Weeper end - packet support
 }
