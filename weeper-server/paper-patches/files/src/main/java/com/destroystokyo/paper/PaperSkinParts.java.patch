--- a/src/main/java/com/destroystokyo/paper/PaperSkinParts.java
+++ b/src/main/java/com/destroystokyo/paper/PaperSkinParts.java
@@ -214,4 +_,61 @@
             return PaperSkinParts.toString(this, "PaperSkinParts.Mutable");
         }
     }
+
+    // Weeper start - disguise api
+    public static SkinParts.Builder builder(){
+        return new Builder();
+    }
+
+    public static class Builder implements SkinParts.Builder {
+
+        private Mutable mutable = new Mutable(0);
+
+        @Override
+        public Builder withCape(boolean cape) {
+            this.mutable.setCapeEnabled(cape);
+            return this;
+        }
+
+        @Override
+        public Builder withJacket(boolean jacket) {
+            this.mutable.setJacketEnabled(jacket);
+            return this;
+        }
+
+        @Override
+        public Builder withLeftSleeve(boolean leftSleeve) {
+            this.mutable.setLeftSleeveEnabled(leftSleeve);
+            return this;
+        }
+
+        @Override
+        public Builder withRightSleeve(boolean rightSleeve) {
+            this.mutable.setRightSleeveEnabled(rightSleeve);
+            return this;
+        }
+
+        @Override
+        public Builder withLeftPants(boolean leftPants) {
+            this.mutable.setLeftPantsEnabled(leftPants);
+            return this;
+        }
+
+        @Override
+        public Builder withRightPants(boolean rightPants) {
+            this.mutable.setRightPantsEnabled(rightPants);
+            return this;
+        }
+
+        @Override
+        public Builder withHat(boolean hat) {
+            this.mutable.setHatsEnabled(hat);
+            return this;
+        }
+
+        public SkinParts build() {
+            return this.mutable.immutableCopy();
+        }
+    }
+    // Weeper end - disguise api
 }
